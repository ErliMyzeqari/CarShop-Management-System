<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAA/RJREFUeF7t
        nDlvE1EUhUPBJhaJHQqWBpqICMmyx4kdMUAVlhAgrBISYksL/4MCiY4/EVFQQMfasO8NSwE1ClIiOQkh
        nBfukx4vb8Z54/E2Pp90lHg8d+bd+2XsGSHRRQghhBBCCCGEEEIIIYQQQgghhBBCCCGk/ent7S309fXt
        kZctRXd395JisXhBXmYfNBtCyDgyht8D2dwSYE3LkXvILNZ2G5sW/XsnoxgyZiVjpVKpKG83FaxlOa7a
        +8basi3FIUOn6VKwhnkydDIpJUaGzq9mSenp6VmB8z+w1vNfMiUFzQRoasxu0pGfQRDkpKwhDAwMLMX6
        7jrWMi/Y74aUtTeFQmEXGvphNxgRdRXtldK6EobhSpwr9sowAyHXpbT9wV/+TjTVMlJExkPjnNVyTUqz
        g68U/EWGUpoqnjL+INmToWm2FMpwIFK+G43HJTUpSgZubR85zuGKkjEipdkHQ96Bhr8ZA4jLOG6J90lp
        IlC/ijKq4CllIqkUXxnY96qUdh5ofjuGUDcpSgbqHlvHiUpny9D4SsH++6U0lgQyrkgpESlfrSFFpaoU
        ykiBtKSIjCfW/lGZoYwYfKUgB6R0DtxSr8Y2ykiTcrm8DcPyluIrA3d5l+dOSKojUr5YQ4zKBIY7iJ9P
        re1RoYwk+EjBgGdc2x1R+12SUxBfPK+UaqGMNBApn43BJomScVEOSWoln89vxUCTSqGMepBQCmXUEwx3
        N54dKsbAY4N9b0opSRsMeC3ywhz4AqLkHZZDkLTAUJPI0JnEbfERORSpFQxUyXhpDDhJKCUNCoXCOgyz
        Vhk6lFILnjLUP7u6tttRUgblFGShiIxX1jCjMo39R/Dzg7U9KpTig68MDPe0qguCYBNeU0qaJJBxSkrn
        8JWC55SjUkpscrncegwpsQwNpaSAkoEBv3YMzJVIGRqR8t6qi8okMiSlxFcGclJKY6GUBNRLhgYfRxtR
        s1ApU0jnSpHvjDfGQOIyjeEOS6kXIuWddbyoKCnHpLRzyOfzm9H4R2MQcZlKKkNDKTE0WobGVwo+So9L
        aXYRGZ+s5qOiZJyQ0lQQKW+t80TlN3JWSrNHf3//FjTYNBkarGMDjt/ZUnxl1PvjIoGUc1La/rSaDE3H
        SkEjQ9KQq1Ez6tb2jJQ1BJ/vNKztjpS1P2hmGE2pBztns0gF+xyS3RuKXCnVnodG1f8SJCXZQKSoe3y7
        2UqpVDoouzWFcrm8But77libSvZkaBxSmi5Do6RgPc+MtWVbhsaQUsEX+IBsbgksKaO5XG6xvJVtIOW8
        EiMvWwqsSz083grDcJlsIoQQQgghhBBCCCGEEEIIIYQQQgghhBBCSDp0df0FkuGM0lbPuwAAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>